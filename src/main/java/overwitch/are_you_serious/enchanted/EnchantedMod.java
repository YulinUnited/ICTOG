/*
 *    MCreator note:
 *
 *    If you lock base mod element files, you can edit this file and the proxy files
 *    and they won't get overwritten. If you change your mod package or modid, you
 *    need to apply these changes to this file MANUALLY.
 *
 *    Settings in @Mod annotation WON'T be changed in case of the base mod element
 *    files lock too, so you need to set them manually here in such case.
 *
 *    Keep the ElementsEnchantedMod object in this class and all calls to this object
 *    INTACT in order to preserve functionality of mod elements generated by MCreator.
 *
 *    If you do not lock base mod element files in Workspace settings, this file
 *    will be REGENERATED on each build.
 *
 */
package overwitch.are_you_serious.enchanted;

import net.minecraft.enchantment.Enchantment;
import net.minecraftforge.fml.common.registry.ForgeRegistries;
import net.minecraftforge.fml.relauncher.SideOnly;
import net.minecraftforge.fml.relauncher.Side;
import net.minecraftforge.fml.common.registry.GameRegistry;
import net.minecraftforge.fml.common.registry.EntityEntry;
import net.minecraftforge.fml.common.network.simpleimpl.SimpleNetworkWrapper;
import net.minecraftforge.fml.common.network.NetworkRegistry;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import net.minecraftforge.fml.common.event.FMLServerStartingEvent;
import net.minecraftforge.fml.common.event.FMLPreInitializationEvent;
import net.minecraftforge.fml.common.event.FMLPostInitializationEvent;
import net.minecraftforge.fml.common.event.FMLInitializationEvent;
import net.minecraftforge.fml.common.SidedProxy;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fluids.FluidRegistry;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.client.event.ModelRegistryEvent;

import net.minecraft.world.biome.Biome;
import net.minecraft.potion.Potion;
import net.minecraft.item.Item;
import net.minecraft.block.Block;
import overwitch.are_you_serious.enchanted.Enchant.*;
import overwitch.are_you_serious.enchanted.Util.EventHate.PlayerEventHandler;

import java.util.function.Supplier;

@Mod(modid = EnchantedMod.MODID, version = EnchantedMod.VERSION)
public class EnchantedMod {
	public static final String MODID = "enchanted";
	public static final String VERSION = "1.2.0";
	public static final SimpleNetworkWrapper PACKET_HANDLER = NetworkRegistry.INSTANCE.newSimpleChannel("enchanted:a");
	@SidedProxy(clientSide = "overwitch.are_you_serious.enchanted.ClientProxyEnchantedMod", serverSide = "overwitch.are_you_serious.enchanted.ServerProxyEnchantedMod")
	public static IProxyEnchantedMod proxy;
	@Mod.Instance(MODID)
	public static EnchantedMod instance;
	public ElementsEnchantedMod elements = new ElementsEnchantedMod();
	@Mod.EventHandler
	public void preInit(FMLPreInitializationEvent event) {
		MinecraftForge.EVENT_BUS.register(this);
		GameRegistry.registerWorldGenerator(elements, 5);
		GameRegistry.registerFuelHandler(elements);
		NetworkRegistry.INSTANCE.registerGuiHandler(this, new ElementsEnchantedMod.GuiHandler());
		elements.preInit(event);
		MinecraftForge.EVENT_BUS.register(elements);
		elements.getElements().forEach(element -> element.preInit(event));
		proxy.preInit(event);

		System.out.println("=== 检查所有附魔注册 ===");
		for (Enchantment enchant : Enchantment.REGISTRY) {
			System.out.println("附魔: " + enchant.getName() + " - ID: " + Enchantment.getEnchantmentID(enchant) + " - 注册名: " + enchant.getRegistryName());
		}

		System.out.println("=== 我们的附魔信息 ===");
		System.out.println("攻击速度附魔ID: " + Enchantment.getEnchantmentID(EnchantmentAttackSpeed.INSTANCE));
		System.out.println("攻击速度附魔注册名: " + EnchantmentAttackSpeed.INSTANCE.getRegistryName());
	}

	@Mod.EventHandler
	public void init(FMLInitializationEvent event) {
		elements.getElements().forEach(element -> element.init(event));
		proxy.init(event);
		MinecraftForge.EVENT_BUS.register(new PlayerEventHandler());
	}

	@Mod.EventHandler
	public void postInit(FMLPostInitializationEvent event) {
		proxy.postInit(event);
	}

	@Mod.EventHandler
	public void serverLoad(FMLServerStartingEvent event) {
		elements.getElements().forEach(element -> element.serverLoad(event));
		proxy.serverLoad(event);
	}

	@SubscribeEvent
	public void registerBlocks(RegistryEvent.Register<Block> event) {
		event.getRegistry().registerAll(elements.getBlocks().stream().map(Supplier::get).toArray(Block[]::new));
	}

	@SubscribeEvent
	public void registerItems(RegistryEvent.Register<Item> event) {
		event.getRegistry().registerAll(elements.getItems().stream().map(Supplier::get).toArray(Item[]::new));
	}

	@SubscribeEvent
	public void registerBiomes(RegistryEvent.Register<Biome> event) {
		event.getRegistry().registerAll(elements.getBiomes().stream().map(Supplier::get).toArray(Biome[]::new));
	}

	@SubscribeEvent
	public void registerEntities(RegistryEvent.Register<EntityEntry> event) {
		event.getRegistry().registerAll(elements.getEntities().stream().map(Supplier::get).toArray(EntityEntry[]::new));
	}

	@SubscribeEvent
	public void registerPotions(RegistryEvent.Register<Potion> event) {
		event.getRegistry().registerAll(elements.getPotions().stream().map(Supplier::get).toArray(Potion[]::new));
	}

	@SubscribeEvent
	public void registerSounds(RegistryEvent.Register<net.minecraft.util.SoundEvent> event) {
		elements.registerSounds(event);
	}

	@SubscribeEvent
	@SideOnly(Side.CLIENT)
	public void registerModels(ModelRegistryEvent event) {
		elements.getElements().forEach(element -> element.registerModels(event));
	}
	static {
		FluidRegistry.enableUniversalBucket();
	}
	@SubscribeEvent
	public void registerEnchantments(RegistryEvent.Register<Enchantment>event) {
		// 注册每个附魔
		//ForgeRegistries.ENCHANTMENTS.register(new EnchantmentNoDrop());
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentTrial());
		// 继续注册其他附魔
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentExecution());
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentExperienceDamage());
		//ForgeRegistries.ENCHANTMENTS.register(new EnchantmentDecisive());
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentAttackSpeed());
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentExperienceRedemption());
		//ModEnchantments.register(event.getRegistry());
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentSuperSweepingEdgets(Enchantment.Rarity.UNCOMMON));
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentLifeDrain());
		ForgeRegistries.ENCHANTMENTS.register(new EnchantmentExperienceSmelting());
	}
}
